<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>如何解决TotalCommander在使用Lister查看图片时，无法自动切换到下一张图片</title>
      <link href="/2025/03/15/TotalCommander%E4%BC%98%E5%8C%96/"/>
      <url>/2025/03/15/TotalCommander%E4%BC%98%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<p>日常在使用TotalCommander的内部查看器Lister打开图片文件时(快捷键F3)，无法使用“左右箭头”自动切换到上一张或下一张图片，使用起来很不方便，故对其进行优化。</p><h3 id="思路分析：">思路分析：</h3><p><strong>1)</strong>.经过测试发现，在TC中如果同时选中多个文件后再按F3打开Lister，此时可以在Lister中切换相邻图片，但若打开Lister前只选择了一张图片，则无法使用该功能</p><p><strong>2)</strong>.使用外部程序，如“IrfanView/XnView”，虽然功能丰富，但由于需要启动外部程序，因此在响应效率上比不上TC自带的“Lister”快速</p><p>在经过实际测试后，发现使用TC的<mark>Imagine插件</mark>，不仅可以解决Lister图片切换的问题，而且Imagine插件功能丰富，且支持TC自带的Lister，因此首选该方案。</p><h3 id="方案实现：">方案实现：</h3><h4 id="1-下载“Imagine”插件并安装">1.下载“Imagine”插件并安装</h4><p><strong>1)</strong>.TC菜单中“配置-》选项-》插件”，点击第一个“从ghisler.com下载插件”中的“下载”按钮，打开TC插件官网：<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314142721180.png" alt="image-20250314142721180" style="zoom: 80%;" /></p><ul><li>“插件安装”除了描述中说明的方法以外，也可以直接去该插件的官网下载最新版本(只有部分流行的插件有官网)，然后将插件压缩包解压后，放置在TC安装目录下的“plugins文件夹中”(需根据插件类型分别创建“wlx、wcx、wfx”等文件夹)</li></ul><p><strong>2)</strong>.插件官网：<a href="https://www.ghisler.com/plugins.htm%EF%BC%8C%E6%90%9C%E7%B4%A2%E2%80%9CImagine%E6%8F%92%E4%BB%B6%E2%80%9D%EF%BC%8C==%E6%A0%B9%E6%8D%AE%E5%BD%93%E5%89%8DTC%E7%9A%84%E7%89%88%E6%9C%AC%E9%80%89%E6%8B%A9%E2%80%9C32%E4%BD%8D%E2%80%9D%E6%88%96%E2%80%9C64%E4%BD%8D%E2%80%9D%E7%9A%84%E7%89%88%E6%9C%AC==">https://www.ghisler.com/plugins.htm，搜索“Imagine插件”，==根据当前TC的版本选择“32位”或“64位”的版本==</a><br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314143327450.png" alt="image-20250314143327450" style="zoom:80%;" /></p><ul><li><p><mark>插件版本选择错误，会导致安装时报错</mark>，如：<img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314143752318.png" alt="image-20250314143752318" style="zoom:80%;" /><br>通常更换另一版本的插件安装包即可</p></li><li><p>官网中部分插件提供的版本不是最新的，可以点击右侧该插件的作者跳转到“该插件自身的官网”。下载最新版本的插件安装包后，按照上图中“插件标准安装方法”安装一下即可。</p><p>如“Imagine插件”官网：<a href="https://www.nyam.pe.kr/dev/imagine/%EF%BC%8C%E4%B8%8B%E8%BD%BD%E5%AF%B9%E5%BA%94%E7%89%88%E6%9C%AC%E7%9A%84%E5%8E%8B%E7%BC%A9%E5%8C%85%E5%8D%B3%E5%8F%AF">https://www.nyam.pe.kr/dev/imagine/，下载对应版本的压缩包即可</a><br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314144415055.png" alt="image-20250314144415055" style="zoom:80%;" /></p></li></ul><p><strong>3)</strong>.下载插件压缩包后，在TC中先选中该压缩包，然后点击“Enter”键，TC会自动检测该zip文件并识别到插件内容，之后一路确定即可。安装完成后如下图：<img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314144814395.png" alt="image-20250314144814395" style="zoom:80%;" /><br>点击下方“确定”按钮即可生效</p><p>之后选择图片并按F3打开Lister后，其会自动识别并选择“Imagine插件”。并且在菜单列表中可以点击“左右箭头”切换相邻图片<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314145404825.png" alt="image-20250314145404825" style="zoom:80%;" /></p><h4 id="2-优化Imagine插件的图片切换功能">2.优化Imagine插件的图片切换功能</h4><p>Imagine插件的快捷键：Space —— 下一张，Backspace —— 上一张，与其他软件直接使用“左右或上下箭头”切换不匹配，使用起来成本高。故进行优化</p><h5 id="避坑点1：查看Imagine插件的快捷键列表">避坑点1：查看Imagine插件的快捷键列表</h5><p>1).打开“TC安装目录 ——》Imagine插件安装目录”，双击运行“Imagine.exe”<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314150023560.png" alt="image-20250314150023560" style="zoom:80%;" /></p><p>2).Imagine插件的快捷键有两种展示形式：</p><ul><li><strong>形式一</strong>：不打开任何图片，直接点击菜单栏的“帮助 -》键盘快捷键”或“选项-》选项-》快捷键”。<mark>该种形式展示的快捷键“不全”，仅有部分快捷键</mark><br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314151232733.png" alt="image-20250314151232733" style="zoom:80%;" /></li><li><strong>形式二</strong>：<mark>先在左侧或右侧列表中随机选择一张图片并双击使用“Imagine”软件打开</mark>，再点击菜单栏的“帮助 -》键盘快捷键”或“选项-》选项-》快捷键”。<mark>此时才会展示“Imagine软件”所有的快捷键</mark><br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314151341222.png" alt="image-20250314151341222" style="zoom:80%;" /></li><li>比较以上两图也可发现，<mark>两种形式下，顶部“工具栏”展示的内容也会不一样，在Lister中其仅会展示后者</mark><br><strong>不打开任何图片时的工具栏</strong>：<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314154325058.png" alt="image-20250314154325058" style="zoom:80%;" /><br><strong>打开某张具体图片后的工具栏</strong>：<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314154444272.png" alt="image-20250314154444272" style="zoom:80%;" /></li></ul><h5 id="避坑点2：“Imagine插件自身的设置”与“该插件在Lister中的设置”不通用">避坑点2：“Imagine插件自身的设置”与“该插件在Lister中的设置”不通用</h5><p>经过实际测试，“在Lister中使用Imagine插件”和“直接使用Imagine插件”打开图片，两者在顶部菜单栏的展示不同。并且“直接修改Imagine插件”自身的设置后，无法在Lister插件中生效。如修改Imagine插件语言为中文后，其在Lister中依然显示英文，同理快捷键也是这样。因此<mark>若要优化Imagine插件在Lister中的使用效果，则必须在Lister中修改才有效</mark></p><h5 id="优化一：修改Lister中Imagine插件语言为中文">优化一：修改Lister中Imagine插件语言为中文</h5><p>由于在Lister中，Imagine插件仅展示“工具栏”，不展示顶部菜单栏，因此无法直接修改语言。通过测试后发现，可通过修改工具栏展示的内容来调整</p><p><strong>1)</strong>.在“工具栏”中展示“语言”图标</p><p>在工具栏中点击“Preferences”图标打开“Imagine属性”界面：<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314155443328.png" alt="image-20250314155443328" style="zoom:80%;" /></p><p>在该界面左侧中找到“Languages”选项并添加到右侧的列表中，并可通过右侧的“Up/Down”调整该选项在工具栏中的展示位置：<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314155702468.png" alt="image-20250314155702468" style="zoom:80%;" /></p><p>点击下方的“应用”按钮后，Lister的工具栏中即会展示“语言图标”，如<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314160627430.png" alt="image-20250314160627430" style="zoom:80%;" /></p><p>2).点击该语言图标打开如下界面：<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314160733056.png" alt="image-20250314160733056" style="zoom:80%;" /><br>==选择“SimplifiedChinese”==并点击“确定”按钮后，即可生效</p><h5 id="优化二：修改Imagine插件切换图片的快捷键">优化二：修改Imagine插件切换图片的快捷键</h5><p>点击Lister中“Imagine工具栏”的“Preferences”图标，并选择“快捷键”页签<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314161657833.png" alt="image-20250314161657833" style="zoom:80%;" /></p><p>在右侧输入新快捷键，如左箭头或上箭头。分配完成后，可将原有的快捷键移除</p><ul><li>该快捷键可能已经分配给其他功能了，如下图提示：<img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314162142853.png" alt="image-20250314162142853" style="zoom:80%;" /><br>此时直接点击右侧的“分配”按钮即可，其会自动取消该快捷键与原有功能的绑定，并将该快捷键绑定到新的功能中</li></ul><p>重新配置后，效果如下：上一个：<img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314162441853.png" alt="image-20250314162441853" style="zoom:80%;" /><br>下一个：<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314162514951.png" alt="image-20250314162514951" style="zoom:80%;" /></p><p>点击下方的“应用”和“确定”按钮后，即可生效</p><h5 id="优化三：文件夹内的图片自动循环切换">优化三：文件夹内的图片自动循环切换</h5><p>当使用左右箭头切换文件夹内的图片时，到末尾时总会出现这样的提示，需要点击后才可循环切换，使用不便故优化下：<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314162818619.png" alt="image-20250314162818619" style="zoom:80%;" /></p><p><strong>方法</strong>：点击工具栏“Preference图标”打开属性界面，选择“杂项”页签：<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250314162929322.png" alt="image-20250314162929322"></p><p>勾选“抵达文件夹首尾时不提示”，应用后即可生效</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>如何搭建部署个人博客，并对博客主题进行自定义</title>
      <link href="/2025/02/10/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2025/02/10/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<p>使用“Hexo框架 + Butterfly主题 + GithubPage”搭建博客网站</p><h4 id="环境安装：">环境安装：</h4><p>1.Git工具安装：<a href="https://git-scm.com/">https://git-scm.com/</a></p><p>2.“Node.js”安装：<a href="https://nodejs.org/zh-cn">https://nodejs.org/zh-cn</a></p><p>3.安装Hexo框架：“Win + R”输入“cmd”，打开命令行窗口，输入指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h4 id="创建Blog：">创建Blog：</h4><p><strong>1</strong>.在任意位置新建存放博客的文件夹，如“d:\HexoBlog”。打开“HexoBlog”文件夹，打开“Git Bash”命令行窗口，输入指令初始化该文件夹(其会从github上拉取Hexo相关的内容)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>由于会从Github拉取项目，网络问题经常会失败，多试几次。成功时效果如下：<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250211115207001.png" alt="image-20250211115207001" style="zoom:80%;" /></p><p><strong>2</strong>.安装相关依赖：</p><p>在博客根目录下打开“Git Bash”窗口，输入以下指令，安装相关依赖：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure><p><strong>3</strong>.在本地预览网页</p><p>在博客根目录下打开“Git Bash”窗口，输入“hexo s”（即“hexo server”）启动本地Hexo服务器。在浏览器中输入“<a href="http://localhost:4000">http://localhost:4000</a>”，即可预览网页(Hexo框架默认使用内置的landscape主题)</p><p><strong>博客根目录下各个文件和文件夹的作用解析</strong>：</p><ul><li>node_modules：存放插件以及Hexo所需的node.js各模块</li><li>package.json：应用程序信息，配置Hexo运行所需js包</li><li>scaffolds：存放模板</li></ul><p><mark>重要文件/文件夹</mark>：</p><ul><li><p><strong>themes</strong>：存放主题，后续可为网站配置各个不同的主题，该文件夹用于存放各个主题的内容</p></li><li><p><strong>source</strong>：<mark>默认包含“<code>_posts</code>”文件夹，后续所有需要发布的博客“<a href="http://xx.md">xx.md</a>”文件都需要放在“<code>_posts</code>”文件夹内</mark>(Hexo会遍历该文件夹下各个“<a href="http://xx.md">xx.md</a>”文件，为其生成静态网页)。</p><p>PS：该文件夹内还可以<mark>自定义其他文件或文件夹</mark>，如存放各个主题配置文件“_config.xx.yml”中用到的图片，此时可在“source”下创建“images”文件夹(<strong>名字随意，不要以“下划线”开头即可</strong>)</p><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250210100231622.png" alt="image-20250210100231622" style="zoom:80%;" /></li><li><p><strong><code>_config.yml</code></strong>：博客根目录的配置文件，编写“网站标题title、网站用到的主题theme、部署地址deploy”等，如：</p><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250210120814182.png" alt="image-20250210120814182" style="zoom:80%;" /><p>与各个主题对应的“_config.xx.yml”的作用不同，后者主要用于自定义该主题内部的各个参数</p></li><li><p><strong>public</strong>：当在“git bash”窗口中输入“hexo g”(即&quot;hexo generate&quot;)后，会在<mark>博客根目录下创建“public文件夹”</mark>，用于存放“source/_posts”下各个“<a href="http://xx.md">xx.md</a>”文件生成的静态网页数据。因此“public文件夹”即代表最终网页展示的所有内容</p></li></ul><h4 id="Blog部署：">Blog部署：</h4><p>这里使用“Github Page”部署博客内容</p><p><strong>1</strong>.在Github中新建<mark>public仓库</mark>，<mark>仓库名称的格式必须为“<a href="http://xn--eqr924avxo.github.io">用户名.github.io</a>”</mark>，<strong>无需勾选“add readme file”</strong>（后面会创建“index.html”文件）</p><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250210120705162.png" alt="image-20250210120705162" style="zoom:67%;" /><p><strong>2</strong>.创建“index.html”文件<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250210111439042.png" alt="image-20250210111439042" style="zoom:67%;" /></p><p><mark>文件名称必须为“index.html”</mark>，<strong>内容可自定义</strong>，之后提交即可：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>xxx<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>xxx的个人主页<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello,today!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250210111811266.png" alt="image-20250210111811266" style="zoom:67%;" /><p><strong>3</strong>.查看主页地址：</p><p>在该仓库“Settings -&gt; Pages”中即可查看到<strong>本仓库的网页地址(与git仓库地址不同)</strong><br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250210112447591.png" alt="image-20250210112447591" style="zoom:67%;" /></p><p><strong>以上链接地址是自动生成的(当仓库名称填写为“<a href="http://xx.github.io">xx.github.io</a>”时，该仓库会自动变更为Pages</strong>。“index.html”则代表网页默认展示内容)。在浏览器中输入该链接，如“<a href="https://xx.github.io">https://xx.github.io</a>”即可访问</p><p><strong>注意</strong>：创建仓库完毕后马上查看GithubPages地址有可能会失败，等待一会后刷新该页面即可</p><p><strong>4</strong>.部署Blog到Github Pages：</p><ul><li><p>安装hexo-deployer-git：</p><p><strong>在博客根目录下打开“Git Bash”窗口</strong>，输入以下指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>配置“_config.yml”文件：</p><p>打开<strong>博客根目录</strong>下的“_config.yml”文件，修改“deploy”参数为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/xx/xx.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250210114933859.png" alt="image-20250210114933859" style="zoom:80%;" /></li><li><p>生成网页数据并发布</p><p>在博客根目录下打开“Git Bash”窗口，并依次执行以下指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean     //清除之前生成的网页数据</span><br><span class="line">hexo g         //即“hexo generate”，根据“xx.md”重新生成网页数据，即“public文件夹”</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hexo d         //即“hexo deploy”，根据“_config.yml”文件中“deploy”参数相关的配置，将本地“public文件夹”中的网页数据部署到Github Pages。与“使用Git工具上传项目文件”流程相同</span><br></pre></td></tr></table></figure></li><li><p>上传git远程仓库成功后，等待一会刷新GithubPages地址“<a href="https://xx.github.io">https://xx.github.io</a>”即可生效</p></li></ul><h4 id="Blog主题配置：">Blog主题配置：</h4><p>Hexo官方有很多主题(<a href="https://hexo.io/themes/">https://hexo.io/themes/</a>)，可以自由设置Hexo框架的主题。这里以Butterfly主题为例：</p><p><strong>1</strong>.下载Butterfly主题：</p><p>Butterfly主题官网：<a href="https://github.com/jerryc127/hexo-theme-butterfly">https://github.com/jerryc127/hexo-theme-butterfly</a></p><p>在博客根目录下打开“Git Bash”窗口，输入以下指令将“Butterfly主题文件”下载到本地指定目录：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//Github地址</span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"></span><br><span class="line">//Gitee地址(针对国内用户)</span><br><span class="line">git clone -b master https://gitee.com/immyw/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>执行成功后即可在“theme文件夹”下出现“butterfly”主题文件夹<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250210103711374.png" alt="image-20250210103711374" style="zoom:80%;" /></p><p><strong>2</strong>.<mark>在博客根目录下</mark>打开<strong>Git Bash</strong>窗口，并输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly        //简写“i”代表“install”</span><br></pre></td></tr></table></figure><p>由于Butterfly主题使用“pug”和“stylus”渲染器，因此还需要安装相应插件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><p><strong>3</strong>.设置网站当前使用的主题为“Butterfly”：</p><p>在博客根目录下，打开“_config.yml”文件，修改theme参数值为“butterfly”即可：<br><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250210103908916.png" alt="image-20250210103908916" style="zoom:80%;" /></p><p><strong>注意</strong>：<mark>theme参数后有空格，且主题名字与上一步中下载到本地的“Butterfly主题”的文件夹名字一致</mark>，即“butterfly”文件夹</p><p><strong>4</strong>.启动本地网页预览：</p><p>在博客根目录下打开“Git Bash”窗口，依次执行以下指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean        //清除之前生成的“public网页内容”</span><br><span class="line">hexo g            //即“hexo generate”，根据“xx.md”生成博客网页目录</span><br><span class="line">hexo s            //即“hexo server”，启动本地预览</span><br></pre></td></tr></table></figure><p>也可以将以上指令合并，直接执行：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure><p>在本地测试OK后，再执行“hexo d”发布到远程即可</p><h4 id="Butterfly主题自定义：">Butterfly主题自定义：</h4><p>进入“butterfly主题”文件夹内部，<mark>复制该主题自身的“<code>_config.yml</code>”文件</mark>，然后退回到“<mark>博客根目录</mark>”下，粘贴该文件，并重命名为“<code>_config.butterfly.yml</code>”。</p><p><strong>注意</strong>：<strong>“butterfly主题”文件夹内部的“_config.yml”文件不要删除</strong>。Hexo框架会自动比较“根目录下的config.butterfly.yml”和“主题文件夹内部的config.yml”文件，并且<strong>优先使用根目录下的“config.butterfly.yml”中的设置</strong></p><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250211155646153.png" alt="image-20250211155646153" style="zoom:80%;" /><h5 id="统计文章字数：">统计文章字数：</h5><p>1).安装“hexo-wordcount”插件：在博客根目录下打开“git bash”窗口，执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><p>2).在“_config.butterfly.yml”中开启“wordcount”功能</p><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250211181803810.png" alt="image-20250211181803810" style="zoom:80%;" /><h5 id="本地搜索：">本地搜索：</h5><p>1).安装“hexo-generator-search”插件：在博客根目录下打开“git bash”窗口，执行指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>2).<mark>在博客根目录下新建“search.xml”文件</mark>，并粘贴以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;?xml</span> <span class="string">version=&quot;1.0&quot;</span> <span class="string">encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="string">&lt;search&gt;</span> </span><br><span class="line">  &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">posts</span> <span class="string">%</span>&#125;</span><br><span class="line">  &#123;<span class="string">%</span> <span class="string">for</span> <span class="string">post</span> <span class="string">in</span> <span class="string">posts.toArray()</span> <span class="string">%</span>&#125;</span><br><span class="line">    &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">post.indexing</span> <span class="string">==</span> <span class="string">undefined</span> <span class="string">or</span> <span class="string">post.indexing</span> <span class="string">%</span>&#125;</span><br><span class="line">    <span class="string">&lt;entry&gt;</span></span><br><span class="line">      <span class="string">&lt;title&gt;&#123;&#123;</span> <span class="string">post.title</span> <span class="string">&#125;&#125;&lt;/title&gt;</span></span><br><span class="line">      <span class="string">&lt;link</span> <span class="string">href=&quot;&#123;&#123;</span> <span class="string">(url</span> <span class="string">+</span> <span class="string">post.path)</span> <span class="string">|</span> <span class="string">uriencode</span> <span class="string">&#125;&#125;&quot;/&gt;</span></span><br><span class="line">      <span class="string">&lt;url&gt;&#123;&#123;</span> <span class="string">(url</span> <span class="string">+</span> <span class="string">post.path)</span> <span class="string">|</span> <span class="string">uriencode</span> <span class="string">&#125;&#125;&lt;/url&gt;</span></span><br><span class="line">      &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">content</span> <span class="string">%</span>&#125;</span><br><span class="line">        <span class="string">&lt;content</span> <span class="string">type=&quot;html&quot;&gt;&lt;![CDATA[&#123;&#123;</span> <span class="string">post.content</span> <span class="string">|</span> <span class="string">noControlChars</span> <span class="string">|</span> <span class="string">safe</span> <span class="string">&#125;&#125;]]&gt;&lt;/content&gt;</span></span><br><span class="line">      &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">      &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">post.categories</span> <span class="string">and</span> <span class="string">post.categories.length&gt;0</span> <span class="string">%</span>&#125;</span><br><span class="line">      <span class="string">&lt;categories&gt;</span></span><br><span class="line">          &#123;<span class="string">%</span> <span class="string">for</span> <span class="string">cate</span> <span class="string">in</span> <span class="string">post.categories.toArray()</span> <span class="string">%</span>&#125;</span><br><span class="line">          <span class="string">&lt;category&gt;</span> &#123;&#123; <span class="string">cate.name</span> &#125;&#125; <span class="string">&lt;/category&gt;</span></span><br><span class="line">          &#123;<span class="string">%</span> <span class="string">endfor</span> <span class="string">%</span>&#125;</span><br><span class="line">      <span class="string">&lt;/categories&gt;</span></span><br><span class="line">      &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">      &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">post.tags</span> <span class="string">and</span> <span class="string">post.tags.length&gt;0</span> <span class="string">%</span>&#125;</span><br><span class="line">        <span class="string">&lt;tags&gt;</span></span><br><span class="line">            &#123;<span class="string">%</span> <span class="string">for</span> <span class="string">tag</span> <span class="string">in</span> <span class="string">post.tags.toArray()</span> <span class="string">%</span>&#125;</span><br><span class="line">            <span class="string">&lt;tag&gt;</span> &#123;&#123; <span class="string">tag.name</span> &#125;&#125; <span class="string">&lt;/tag&gt;</span></span><br><span class="line">            &#123;<span class="string">%</span> <span class="string">endfor</span> <span class="string">%</span>&#125;</span><br><span class="line">        <span class="string">&lt;/tags&gt;</span></span><br><span class="line">      &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">    <span class="string">&lt;/entry&gt;</span></span><br><span class="line">    &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">    &#123;<span class="string">%</span> <span class="string">endfor</span> <span class="string">%</span>&#125;</span><br><span class="line">  &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">  &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">pages</span> <span class="string">%</span>&#125;</span><br><span class="line">    &#123;<span class="string">%</span> <span class="string">for</span> <span class="string">page</span> <span class="string">in</span> <span class="string">pages.toArray()</span> <span class="string">%</span>&#125;</span><br><span class="line">    &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">post.indexing</span> <span class="string">==</span> <span class="string">undefined</span> <span class="string">or</span> <span class="string">post.indexing</span> <span class="string">%</span>&#125;</span><br><span class="line">    <span class="string">&lt;entry&gt;</span></span><br><span class="line">      <span class="string">&lt;title&gt;&#123;&#123;</span> <span class="string">page.title</span> <span class="string">&#125;&#125;&lt;/title&gt;</span></span><br><span class="line">      <span class="string">&lt;link</span> <span class="string">href=&quot;&#123;&#123;</span> <span class="string">(url</span> <span class="string">+</span> <span class="string">page.path)</span> <span class="string">|</span> <span class="string">uriencode</span> <span class="string">&#125;&#125;&quot;/&gt;</span></span><br><span class="line">      <span class="string">&lt;url&gt;&#123;&#123;</span> <span class="string">(url</span> <span class="string">+</span> <span class="string">page.path)</span> <span class="string">|</span> <span class="string">uriencode</span> <span class="string">&#125;&#125;&lt;/url&gt;</span></span><br><span class="line">      &#123;<span class="string">%</span> <span class="string">if</span> <span class="string">content</span> <span class="string">%</span>&#125;</span><br><span class="line">        <span class="string">&lt;content</span> <span class="string">type=&quot;html&quot;&gt;&lt;![CDATA[&#123;&#123;</span> <span class="string">page.content</span> <span class="string">|</span> <span class="string">noControlChars</span> <span class="string">|</span> <span class="string">safe</span> <span class="string">&#125;&#125;]]&gt;&lt;/content&gt;</span></span><br><span class="line">      &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">    <span class="string">&lt;/entry&gt;</span></span><br><span class="line">    &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line">    &#123;<span class="string">%</span> <span class="string">endfor</span> <span class="string">%</span>&#125;</span><br><span class="line">  &#123;<span class="string">%</span> <span class="string">endif</span> <span class="string">%</span>&#125;</span><br><span class="line"><span class="string">&lt;/search&gt;</span></span><br></pre></td></tr></table></figure><p>3).打开博客根目录下的“_config.yml”，添加以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">template:</span> <span class="string">./search.xml</span></span><br></pre></td></tr></table></figure><ul><li>path：执行“hexo g”后，会根据这里的路径在“<strong>public文件夹</strong>”下生成“search.xml”文件</li><li>field：指定搜索范围，包含“post - 仅文章”， “page - 仅页面”， “all - 文章和页面”。默认post</li><li>content：是否在生成的“public/search.xml”文件中包含博客的文本内容。默认为true</li><li>template：在执行“hexo g”指令时，<mark>以博客根目录下的“search.xml”为模板</mark>，在“public文件夹”下生成新的索引文件“search.xml”</li></ul><h5 id="网络链接图片的显示：">网络链接图片的显示：</h5><p>当在“<a href="http://xx.md">xx.md</a>”文件中使用Gitee图床时，由于<strong>Gitee服务器会自动开启“防盗链”功能</strong>，因此“Hexo框架”生成的静态网页无法显示该Gitee网络链接图片。</p><p><strong>解决方法</strong>：修改主题的页面头部head模板。如“butterfly主题”，打开“layout/includes/head.pug”文件，添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">meta(name=&quot;referrer&quot; content=&quot;no-referrer&quot;)</span><br></pre></td></tr></table></figure><p>部分主题可能使用的是&quot;EJS或Swig&quot;语言，则head模板文件可能为“layout/_partial/head.swig&quot;或“head.ejs”，此时则添加：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta name=&quot;referrer&quot; content=&quot;no-referrer&quot;&gt;</span><br></pre></td></tr></table></figure><p>如Pug语言则为：</p><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250212121202030.png" alt="image-20250212121202030" style="zoom:80%;" /><p>之后保存该文件，重新生成静态网页即可</p><h5 id="文章链接调整：">文章链接调整：</h5><p>打开文章详情页，底部会展示该文章的点击链接，默认显示“<a href="http://example.com">http://example.com</a>”前缀。此时需要修改博客根目录下的“_config.yml”文件的“url”参数值，如：</p><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250212121415602.png" alt="image-20250212121415602" style="zoom:80%;" /><p>效果如下：</p><img src="https://gitee.com/kakaix892/image-host/raw/main/Typora/image-20250212124510868.png" alt="image-20250212124510868" style="zoom:80%;" /><h5 id="调整Hexo渲染器，支持多语法显示">调整Hexo渲染器，支持多语法显示</h5><p>Hexo默认渲染器“hexo-renderer-marked”对于部分语法不支持，无法显示文本高亮等特性。故调整渲染器为“hexo-renderer-markdown-it”，比默认渲染器效率更高，且功能更为全面</p><p>1).卸载默认渲染器：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save</span><br></pre></td></tr></table></figure><p>2).安装“hexo-renderer-markdown-it”</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure><p>3).打开博客根目录下的“_config.xml”文件，添加以下内容：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用“hexo-renderer-markdown-it”渲染器(不要使用hexo默认渲染器&quot;hexo-renderer-marked&quot;)</span></span><br><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">preset:</span> <span class="string">&#x27;default&#x27;</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">langPrefix:</span> <span class="string">&#x27;language-&#x27;</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">quotes:</span> <span class="string">&#x27;“”‘’&#x27;</span></span><br><span class="line">  <span class="attr">enable_rules:</span></span><br><span class="line">  <span class="attr">disable_rules:</span></span><br><span class="line">  <span class="attr">plugins:</span>    <span class="comment">#开启内置插件的功能</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span> <span class="comment"># https://github.com/markdown-it/markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-cjk-breaks</span> <span class="comment"># https://github.com/markdown-it/markdown-it-cjk-breaks</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-container</span> <span class="comment"># https://github.com/markdown-it/markdown-it-container</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-emoji</span> <span class="comment"># https://github.com/markdown-it/markdown-it-emoji</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span> <span class="comment"># https://github.com/markdown-it/markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-ins</span> <span class="comment"># https://github.com/markdown-it/markdown-it-ins</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-mark</span> <span class="comment"># https://github.com/markdown-it/markdown-it-mark</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span> <span class="comment"># https://github.com/markdown-it/markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span> <span class="comment"># https://github.com/markdown-it/markdown-it-sup</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">2</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">&#x27;header-anchor&#x27;</span></span><br><span class="line">    <span class="attr">permalinkSide:</span> <span class="string">&#x27;left&#x27;</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">&#x27;¶&#x27;</span></span><br><span class="line">    <span class="attr">case:</span> <span class="number">0</span></span><br><span class="line">    <span class="attr">separator:</span> <span class="string">&#x27;-&#x27;</span></span><br><span class="line">  <span class="attr">images:</span></span><br><span class="line">    <span class="attr">lazyload:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">prepend_root:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">post_asset:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">inline:</span> <span class="literal">false</span>  <span class="comment"># https://markdown-it.github.io/markdown-it/#MarkdownIt.renderInline</span></span><br></pre></td></tr></table></figure><p>4).重新生成博客的静态网页数据即可</p><h5 id="博客详情页底部不展示“上一篇或下一篇文章”">博客详情页底部不展示“上一篇或下一篇文章”</h5><p>经过检查发现，“_config.butterfly.yml”中有“post_pagination”相关的配置，但博客详情页底部依然不展示“相邻推荐文章”。查询后得知，<mark>旧版Butterfly主题可能存在该问题，在“themes/butterfly”下git更新，并重新生成博客数据</mark>即可</p><h4 id="参考链接：">参考链接：</h4><p>Butterfly主题参数解析：<a href="https://www.cnblogs.com/ncphoton/p/16950595.html">https://www.cnblogs.com/ncphoton/p/16950595.html</a></p><p>“hexo-renderer-markdown-it”插件：</p><ul><li>官网：<a href="https://github.com/hexojs/hexo-renderer-markdown-it">https://github.com/hexojs/hexo-renderer-markdown-it</a></li><li>参数解析：<a href="https://blog.cxplay.org/works/hexo-renderer-markdown-it_and_plugins_config/">https://blog.cxplay.org/works/hexo-renderer-markdown-it_and_plugins_config/</a></li></ul>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>